version: '3.8'
services:
  server:
    build: ./server
    container_name: inteleye-server
    ports:
      - '5000:5000'
    depends_on:
      - mongodb
    volumes:
      - ./server:/app
    command: bash -c "npm install && npm run start:dev"
    environment:
      - MONGODB_URI=${MONGODB_URI}
    networks:
      - project-network
      
  client:
    build: ./client
    container_name: inteleye-client
    ports:
      - '3000:3000'
    volumes:
      - ./client:/app
    command: bash -c "npm install && npm start"
    networks:
      - project-network

  mongodb:
    image: mongo:7.0
    container_name: inteleye-mongodb
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - project-network

  mongo-express:
    image: mongo-express:1.0.2
    container_name: inteleye-mongo-express
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_MONGODB_URL=${ME_CONFIG_MONGODB_URL}
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
    depends_on:
      - mongodb
    networks:
      - project-network

volumes:
  pgadmin-data:
  mongodb-data:

networks:
  project-network:
    driver: bridge